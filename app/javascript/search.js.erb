function saveRecipeToDatabase(recipeDetails) {
  console.log("Recipe Details:", recipeDetails); // data is correct

  //join table
  const ingredients = recipeDetails.ingredients.map(function(ingredient) {
    return {
      ingredient_id: ingredient.id,  // The ID of the ingredient table
      quantity: ingredient.amount,   // The quantity to be stored in join table
      name: ingredient.name,
      unit: ingredient.unit
    };
  });

 
  const recipePayload = {
    recipe: {
      title: recipeDetails.title,  
      description: recipeDetails.instructions,  
      user_id: document.querySelector('meta[name="user-id"]').getAttribute('content'),  // from meta tag
      recipe_ingredients_attributes: ingredients // ingredients i for RecipeIngredients
    }
  };

  // Make the AJAX request to save the recipe
  $.ajax({
    url: "/recipes/create_from_api", 
    method: "POST",
    data: recipePayload,
    dataType: "json",
    success: function(response) {
      console.log("Recipe saved successfully:", response);
      alert("Recipe saved!");
    },
    error: function(xhr, status, error) {
      console.error("Error saving recipe:", error);
      console.log("Response:", xhr.responseText);
      alert("Failed to save recipe.");
    }
  });
}

$(document).ready(function () {
  const apiKey = "<%= Rails.application.credentials.dig(:spoonacular, :api_key) %>";

  // CSRF token for internal requests (to your Rails app)
  const csrfToken = document.querySelector('meta[name="csrf-token"]')?.getAttribute('content');
  console.log("CSRF Token:", csrfToken);
  
  
$.ajaxSetup({
  beforeSend: function(xhr, settings) {
    if (!/^(GET|HEAD|OPTIONS|TRACE)$/i.test(settings.type) && !this.crossDomain) {
      xhr.setRequestHeader("X-CSRF-Token", $('meta[name="csrf-token"]').attr('content'));
    }
  }
});

  // Search button click handler
  $("#search-button").on("click", function () {
    const ingredient = $("#ingredient").val().trim();
    
    if (ingredient) {
      fetchRecipes(ingredient, apiKey);
    } else {
      alert("Please enter an ingredient.");
    }
  });

  // Fetch recipes based on the ingredient
  function fetchRecipes(ingredient, apiKey) {
    $("#loading-indicator").show();
    $.ajax({
      url: `https://api.spoonacular.com/recipes/findByIngredients?ingredients=${ingredient}&number=6&apiKey=${apiKey}`,
      method: 'GET',
      success: function (recipes) {
        console.log(recipes); // Log the recipes to verify the API response
        
        // Call another function to display the recipes (you can reuse the code to display detailed recipe information here)
        fetchDetailedRecipes(recipes, apiKey);
      },
      error: function () {
        alert("Error fetching recipes.");
      },
      complete: function () {
      $("#loading-indicator").hide();
    }
    });
  }

  // Function to display detailed recipes
  function fetchDetailedRecipes(recipes, apiKey) {
    $('#recipes-list').empty();
    recipes.forEach(function (recipe) {
      $("#loading-indicator").show(); 
      $.ajax({
        url: `https://api.spoonacular.com/recipes/${recipe.id}/information?apiKey=${apiKey}`,
        method: "GET",
        success: function (recipeDetails) {
          const ingredients = recipeDetails.extendedIngredients || [];
          console.log("Fetched ingredients:", ingredients);

          const sanitizedIngredients = ingredients.map(ingredient => {
            return {
              name: ingredient.name,
              amount: ingredient.amount,
              unit: ingredient.unit || "unitless",
              id: ingredient.id // Add ingredient ID for saving to the database
            };
          });

          const encodedIngredients = encodeURIComponent(JSON.stringify(sanitizedIngredients));

          const recipeCard = `
            <div class="recipe" 
                data-recipe-id="${recipeDetails.id}"
                data-recipe-title="${recipeDetails.title}"
                data-recipe-image="${recipeDetails.image}"
                data-recipe-instructions="${recipeDetails.instructions || 'No instructions available.'}"
                data-recipe-ingredients='${encodedIngredients}'>
              <h3>${recipeDetails.title}</h3>
              <img src="${recipeDetails.image}" alt="${recipeDetails.title}" />
              <p><strong>Ingredients:</strong></p>
              <ul>
                ${sanitizedIngredients.map(function (ingredient) {
                  return `<li>${ingredient.amount} ${ingredient.unit} ${ingredient.name}</li>`;
                }).join('')}
              </ul>
              <p><strong>Instructions:</strong></p>
              <p>${recipeDetails.instructions || 'No instructions available.'}</p>
              <button class="save-recipe"
                  data-recipe-id="${recipeDetails.id}"
                  data-recipe-title="${recipeDetails.title}"
                  data-recipe-instructions="${recipeDetails.instructions || 'No instructions available.'}"
                  data-recipe-ingredients='${encodedIngredients}'>
                  Save Recipe
              </button>
            </div>
          `;
          $('#recipes-list').append(recipeCard); 
        },
        error: function () {
          console.error(`Failed to load detailed recipe information for recipe ID ${recipe.id}`);
        }, 
        complete: function () {
        $("#loading-indicator").hide(); 
      }
      });
    });

    
  }

  // save the recipe when the button is clicked
  $(document).on("click", ".save-recipe", function () {
    const recipeIngredientsData = $(this).data("recipe-ingredients");
    console.log("Recipe ingredients data on click:", recipeIngredientsData);
    
    let recipeIngredients = [];
    try {
    
      const decodedData = decodeURIComponent(recipeIngredientsData);
      console.log("Decoded ingredients:", decodedData); //  is successful
  
      recipeIngredients = JSON.parse(decodedData);
      console.log("Parsed ingredients:", recipeIngredients);
    } catch (error) {
      console.error("Error parsing ingredients:", error);
    }
    
    console.log("Parsed ingredients:", recipeIngredients);
    
    saveRecipeToDatabase({
      title: $(this).data("recipe-title"),
      instructions: $(this).data("recipe-instructions"),
      ingredients: recipeIngredients
    });
  });  
});
